name: iOS CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: WallaMarvel/WallaMarvel.xcodeproj
  APP_SCHEME: WallaMarvel
  DESTINATION: platform=iOS Simulator,OS=latest,name=iPhone 16 Pro
  CONFIGURATION: Debug
  XCODE_VERSION: '16.4'

jobs:
  build-and-test:
    runs-on: macos-15

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Select Xcode 16.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Show selected toolchain
        run: |
          xcodebuild -version
          swift --version

      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            ~/Library/Caches/org.swift.swiftpm
            ~/Library/Developer/Xcode/DerivedData/SourcePackages
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Resolve packages
        run: |
          set -eo pipefail
          if [ -n "${WORKSPACE:-}" ]; then
            xcodebuild -resolvePackageDependencies -workspace "${WORKSPACE}"
          else
            xcodebuild -resolvePackageDependencies -project "${PROJECT}"
          fi

      - name: Build app (simulator)
        run: |
          set -eo pipefail
          if [ -n "${WORKSPACE:-}" ]; then
            xcodebuild \
              -workspace "${WORKSPACE}" \
              -scheme "${APP_SCHEME}" \
              -configuration "${CONFIGURATION}" \
              -destination "${DESTINATION}" \
              CODE_SIGNING_ALLOWED=NO \
              build
          else
            xcodebuild \
              -project "${PROJECT}" \
              -scheme "${APP_SCHEME}" \
              -configuration "${CONFIGURATION}" \
              -destination "${DESTINATION}" \
              CODE_SIGNING_ALLOWED=NO \
              build
          fi

      - name: Discover & run Module tests (SPM under /Modules)
        run: |
          set -eo pipefail

          run_tests_for_scheme () {
            local scheme="$1"
            local bundle="Modules-${scheme}.xcresult"
            echo "â†’ Running tests for scheme: ${scheme}"
            if [ -n "${WORKSPACE:-}" ]; then
              xcodebuild test \
                -workspace "${WORKSPACE}" \
                -scheme "${scheme}" \
                -configuration "${CONFIGURATION}" \
                -destination "${DESTINATION}" \
                -resultBundlePath "${bundle}" \
                CODE_SIGNING_ALLOWED=NO
            else
              xcodebuild test \
                -project "${PROJECT}" \
                -scheme "${scheme}" \
                -configuration "${CONFIGURATION}" \
                -destination "${DESTINATION}" \
                -resultBundlePath "${bundle}" \
                CODE_SIGNING_ALLOWED=NO
            fi
          }

          run_tests_for_package () {
            local pkg="$1"
            local candidates=("${pkg}-Package" "${pkg}")
            local chosen=""
            for s in "${candidates[@]}"; do
              if [ -n "${WORKSPACE:-}" ]; then
                if xcodebuild -workspace "${WORKSPACE}" -scheme "${s}" -showBuildSettings >/dev/null 2>&1; then
                  chosen="$s"; break
                fi
              else
